import os
import platform
import subprocess

def verificar_conectividade():
    host = input("🌐 Digite o endereço para testar (ex: google.com): ")
    resposta = os.system(f"ping -c 4 {host}" if platform.system() != "Windows" else f"ping {host}")
    if resposta == 0:
        print("✅ Conectividade OK!")
    else:
        print("❌ Sem resposta. Verifique a rede.")

def listar_processos():
    print("📋 Listando processos ativos...")
    if platform.system() == "Windows":
        os.system("tasklist")
    else:
        os.system("ps -aux")

def verificar_espaco_disco():
    print("💽 Verificando espaço em disco...")
    if platform.system() == "Windows":
        os.system("wmic logicaldisk get size,freespace,caption")
    else:
        os.system("df -h")

def git_status():
    print("🔍 Verificando status do Git...")
    os.system("git status")

def git_commit_push():
    mensagem = input("📝 Mensagem do commit: ")
    branch = input("🌿 Nome da branch para push: ")
    os.system("git add .")
    os.system(f"git commit -m \"{mensagem}\"")
    os.system(f"git push origin {branch}")
    print("✅ Commit e push realizados com sucesso!")

def assistente_ti():
    while True:
        print("\n🛠️ Assistente de Tecnologia da Informação")
        print("1. Verificar conectividade (ping)")
        print("2. Listar processos ativos")
        print("3. Verificar espaço em disco")
        print("4. Verificar status do Git")
        print("5. Fazer commit e push no Git")
        print("6. Sair")

        escolha = input("👉 Escolha uma opção: ")

        if escolha == "1":
            verificar_conectividade()
        elif escolha == "2":
            listar_processos()
        elif escolha == "3":
            verificar_espaco_disco()
        elif escolha == "4":
            git_status()
        elif escolha == "5":
            git_commit_push()
        elif escolha == "6":
            print("👋 Encerrando assistente...")
            break
        else:
            print("❌ Opção inválida. Tente novamente.")

# Para executar:
if __name__ == "__main__":
    assistente_ti()
