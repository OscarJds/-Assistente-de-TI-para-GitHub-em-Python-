import os
import platform
import datetime

chamados = []

def abrir_chamado():
    nome = input("👤 Nome do usuário: ")
    problema = input("🛠️ Descreva o problema: ")
    chamado = {
        "id": len(chamados) + 1,
        "usuario": nome,
        "problema": problema,
        "status": "Aberto",
        "data": datetime.datetime.now().strftime("%d/%m/%Y %H:%M")
    }
    chamados.append(chamado)
    print(f"✅ Chamado #{chamado['id']} aberto com sucesso!")

def listar_chamados():
    if not chamados:
        print("📭 Nenhum chamado registrado.")
        return
    print("\n📋 Lista de chamados:")
    for c in chamados:
        print(f"#{c['id']} | {c['usuario']} | {c['problema']} | {c['status']} | {c['data']}")

def fechar_chamado():
    listar_chamados()
    try:
        id_chamado = int(input("🔒 Digite o ID do chamado a fechar: "))
        for c in chamados:
            if c["id"] == id_chamado:
                c["status"] = "Fechado"
                print(f"✅ Chamado #{id_chamado} fechado.")
                return
        print("❌ Chamado não encontrado.")
    except ValueError:
        print("⚠️ ID inválido.")

def verificar_ip():
    print("🌐 Verificando IP local...")
    if platform.system() == "Windows":
        os.system("ipconfig")
    else:
        os.system("ifconfig")

def reiniciar_servico():
    servico = input("🔄 Nome do serviço a reiniciar: ")
    if platform.system() == "Windows":
        os.system(f"net stop {servico} && net start {servico}")
    else:
        os.system(f"sudo systemctl restart {servico}")
    print(f"✅ Serviço '{servico}' reiniciado.")

def assistente_helpdesk():
    while True:
        print("\n🎧 Assistente de TI - Help Desk")
        print("1. Abrir chamado")
        print("2. Listar chamados")
        print("3. Fechar chamado")
        print("4. Verificar IP local")
        print("5. Reiniciar serviço")
        print("6. Sair")

        escolha = input("👉 Escolha uma opção: ")

        if escolha == "1":
            abrir_chamado()
        elif escolha == "2":
            listar_chamados()
        elif escolha == "3":
            fechar_chamado()
        elif escolha == "4":
            verificar_ip()
        elif escolha == "5":
            reiniciar_servico()
        elif escolha == "6":
            print("👋 Encerrando assistente Help Desk...")
            break
        else:
            print("❌ Opção inválida. Tente novamente.")

# Para executar:
if __name__ == "__main__":
    assistente_helpdesk()
